import "Microsoft.ObjectStore.QueueService.bond"

namespace Microsoft.ObjectStore.QueueService.Multi;


// key types for multi-tennant service

struct AppID
{
    1: required string appID;
}

// key for requests
struct QueueKey:Microsoft.ObjectStore.QueueService.QueueKeyBase
{
    100: required vector<uint8> messageKey;     // hack
    [KeyMetadata("PartitionKey")]
    200: required Microsoft.ObjectStore.QueueService.QueueID queueID;   // name of queue, must be unique. Must match preconfigured queue if CreateQueue is disabled
                                                                        // PartitionKey attribute must be match (on partitionSelector or queueID) in QueueKey and QueueKeyTable
}

/* HACK
struct QueueKeyTable:Microsoft.ObjectStore.QueueService.QueueKeyTableBase
{
    100: required vector<uint8> messageKey;
    [KeyMetadata("PartitionKey")]
    200: required Microsoft.ObjectStore.QueueService.QueueID queueID;   // name of queue, must be unique. Must match preconfigured queue if CreateQueue is disabled
                                                                        // PartitionKey attribute must be match (on partitionSelector or queueID) in QueueKey and QueueKeyTable
}
*/

struct CreateQueueRequest:Microsoft.ObjectStore.QueueService.CreateQueueRequestBase<AppID>
{
}
